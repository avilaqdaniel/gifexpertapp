{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","ctgs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGtB,CAACpB,IAEGqB,EDd0BI,CAAazB,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SACMH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAESA,GADAA,EAAIC,aEXpBe,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,gBAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAI9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BACM0C,EAAWlB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCThC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f96fa4d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2) {\n            setCategories( ctgs => [ inputValue, ...ctgs]);\n            setinputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }/>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=yLObWzHOkSu0zHi7xkv0UaLfJyQQumGH`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n     \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n            <div className=\"card-grid\"> \n                { images.map( (img) => (\n                    <GifGridItem\n                        key={img.id}\n                        { ...img }/>\n                ))}\n            \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category)\n            .then( img => {\n                setstate({\n                    data: img,\n                    loading: false\n                });\n            })\n    }, [category]);\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball'])\n\n    return(\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n            <ol>\n                { categories.map( category => \n                    <GifGrid\n                        key = { category }\n                        category = { category }/>\n                ) }    \n            </ol>\n            \n        </>\n    )\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}